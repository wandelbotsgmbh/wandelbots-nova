[project]
name = "wandelbots-nova"
version = "1.3.1"
description = "Official Python SDK for the Wandelbots"
authors = [
    { name = "Wandelbots GmbH" },
    { name = "Christoph Biering", email = "christoph.biering@wandelbots.com" },
    { name = "Mahsum Demir", email = "mahsum.demir@wandelbots.com" },
    { name = "Dirk Sonnemann", email = "dirk.sonnemann@wandelbots.com" },
    { name = "Andreas Langenhagen", email = "andreas.langenhagen@wandelbots.com" },
    { name = "Stefan Wagner", email = "stefan.wagner@wandelbots.com" },
    { name = "André Kühnert", email = "andre.kuhnert@wandelbots.com" },
]
requires-python = "~=3.10"
readme = "README.md"
dependencies = [
    "httpx >=0.28.0,<0.29",
    "wandelbots_api_client ==25.1.0",
    "websockets >=14.1.0,<15",
    "loguru >=0.7.2,<0.8",
    "pydantic >=2.10.3,<3",
    "python-decouple ~=3.8",
    "scipy >=1.14.1,<2",
    "aiostream >=0.6.4,<0.7",
    "anyio >=4.8.0,<5",
    "asyncstdlib >=3.13.0,<4",
    "numpy >1.1.19",
    "asyncua >=1.1.5,<2",
    "docstring-parser >=0.16.0"
]

[project.optional-dependencies]
nova-rerun-bridge = [
    "rerun-sdk ==0.22.1",
    "requests >=2.32.3",
    "APScheduler >=3.11.0",
    "trimesh >=4.5.3",
]
benchmark = [
    "rerun-sdk ==0.22.1",
    "requests >=2.32.3",
    "APScheduler >=3.11.0",
    "trimesh >=4.5.3",
    "pyyaml >5.3",
]

[project.scripts]
download-models = "nova_rerun_bridge.helper_scripts.download_models:update_robot_models"

[dependency-groups]
dev = [
    "ruff>=0.8.2,<0.10.0",
    "pytest>=8.3.4,<9",
    "pytest-asyncio>=0.24,<0.26",
    "mypy>=1.13.0,<2",
    "pre-commit>=4.0.1,<5",
    "icecream>=2.1.4,<3",
    "ipython<9",
]

[tool.hatch.build.targets.sdist]
include = [
    "nova",
    "nova_rerun_bridge",
]

[tool.hatch.build.targets.wheel]
include = [
    "nova",
    "nova_rerun_bridge",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = """
    --doctest-modules
    --junitxml=reports/pytest.xml
    --import-mode=importlib"""
junit_family = "xunit2"
norecursedirs = "develop .ipynb_checkpoints .venv .tox *.egg"
testpaths = """
    nova
    tests
"""

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_unreachable = true
warn_unused_configs = true
junit_xml = "reports/mypy/mypy.xml"
show_error_context = true
warn_unused_ignores = true
strict_equality = true
mypy_path = ".mypy_stubs"
files = "nova, examples, tests"
namespace_packages = true
explicit_package_bases = true

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
assets = []
build_command = "pip install uv && uv build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["chore", "feat", "fix"]
minor_tags = ["feat"]
patch_tags = ["fix", "chore"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
